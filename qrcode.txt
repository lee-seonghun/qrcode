32 65 205 69 41 220 46 128 236

1.2 QR 코드로 encode 할 수있는 문자
· 숫자 (0-9) 
　3개 숫자를 10bit로 표현합니다. 
　이론상 최대 7089 문자를 저장할 수 있습니다. 
. 영숫자 (0-9A-Z $ % + -. / :) 45 문자 
　2개 문자를 11bit로 표현합니다. 
　이론상 최대 4296 문자를 저장할 수 있습니다. 
· 8 비트 바이트 데이터 
　이론상 최대 2953 문자를 저장할 수 있습니다. 
. 한자 데이터 
　한자 1 문자를 13bit로 표현합니다. 
　이론상 최대 1817 문자를 저장할 수 있습니다.

(26,9,8)

Symbol size: 8-bits
Codeword length: 255
Number of data symbols: 9
Number of FEC symbols: 17
Finite Field: GF(2^8)
Finite Field polynomial: 1x8 + 1x7 + 0x6 + 0x5 + 0x4 + 0x3 + 1x2 + 1x1 + 1x0
Generator polynomial roots: 32
Generator polynomial field index: 120th element (32 consecutive roots)

버전	오류 정정 단계	데이터 코드의 갯수	오류 정정 코드의 갯수	숫자	알파벳+α	8bit
1	L		19			7			41	25		17
	M		16			10			34	20		14
	Q		13			13			27	16		11
	H		9			17			17	10		7

생성 다항식
g(x) = x^17 + α^43x^16 + α^139x^15 + α^206x^14 + α^78x^13 + α^43x^12 + α^239x^11 + α^123x^10 + α^206x^9 + α^214x^8 
　 + α^147x^7 + α^24x^6 + α^99x^5 + α^150x^4 + α^39x^3 + α^243x^2 + α^163x + α^136 

112 = 14

MODE = 4 bits
LEN =  9 bits
DATA = 11 x 9 = 99 bits
+) = 112 bits = 14 bytes + 0 bits

MODE   | DATA LEN        | D0                  | D1                  | D2                  | D3                    | D4                  | D5                  | D6                  | D7                  | D8                  |
3 2 1 0 8 7 6 5|4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0
*) 홀수개
MODE   | DATA LEN        | D0                  | D1                  | D2                  | D3                    | D4                  | D5                  | D6        | EN    | EB-7bit     | EP1           | EP2           |
3 2 1 0 8 7 6 5|4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 A 9 8 7 6 5 4 3 2 1 0 5 4 3 2 1 0 3 2 1 0 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0
 E0            | E1            | E2            | E3            | E4            | E5            | E6            | E7            | E8            | E9            | E10           | E11           | E12           | E13           |
7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 

1 111 1 1111
8 765 4 3210
*) 데이터 개수가 홀 수개이면 6 bits 사용
*) 종료지시자 : 0000
*) 인코딩 채움 비티 : 8비트 단위로 변환하고 자리수가 맞지 않는 위치는 0으로 채움
*) 인코딩 바이트 채움 : 11101100, 00010001 을 번갈아 채워넣음
 ex ) ver1, H 일 때 

RS(26,9,8), GF(2^8), 26-9=17, 17 = 2 * 8 + 1
RS(26,19,2), 26-19=7, 7 = 2 * 3 + 1
RS(26,16,4), 26-16=10, 10 = 2 * 5


STEP 4. GF(256) = GF(2^8)
 음수와 양수는 같다. 절대값만 계산하면 된다.
 더하기와 빼기의 결과가 같다. 이진 비트연산 xor과 결과가 같다.
 GF(256)에서 더하기 빼기는 두 수를 XOR 연산으로 계산한다.

STEP 5. 바이트 단위 모듈로 100011101을 사용하여 2의 거듭제곱 생성


 
